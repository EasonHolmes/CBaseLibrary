plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
}
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
    }
    buildFeatures {
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    api project(':refresh-layout')
//    api project(':refresh-header')
//    api project(':refresh-footer')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    api "androidx.recyclerview:recyclerview:1.2.1"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlin_version"
    api "androidx.cardview:cardview:1.0.0"
    api "com.google.android.material:material:1.4.0"
    api 'androidx.appcompat:appcompat:1.3.1'
    api "com.scwang.smart:refresh-layout-kernel:$rootProject.refresh_version"
    api "com.scwang.smart:refresh-header-material:$rootProject.refresh_version"
    api "com.scwang.smart:refresh-footer-classics:$rootProject.refresh_version"

}
// 打包源码jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//编译groovy代码时采用 UTF-8
tasks.withType(GroovyCompile) {
    groovyOptions.encoding = "MacRoman"
}

//编译JAVA文件时采用UTF-8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 打包文档jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
//task sourcesJar(type: Jar) {
//    if (project.hasProperty("kotlin")) {
//        from android.sourceSets.main.java.getSrcDirs()
//    } else if (project.hasProperty("android")) {
//        from android.sourceSets.main.java.sourceFiles
//    } else {
//        println project
//        from sourceSets.main.allSource
//    }
//    classifier = 'sources'
//}
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant..
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'io.github.cwidgetlibrary'
                artifactId = 'cwidget'
                version = '0.1.1'
            }
        }
    }
}